#!/usr/bin/perl -w

=pod
  Convert MGI FASTQ file to Illumina format
=cut

use strict;
use warnings;

my $usage="perl $0 <read1.gz> <read2.gz> <sample> <lane (int 1-4)> <outdir>\n";
die $usage if @ARGV!=5 or $ARGV[3]!~/^[1-4]$/;
my($read1,$read2,$sample,$lane,$outdir)=@ARGV;
my $out1_name="$outdir/$sample\_S1_L00$lane\_R1_001.fastq.gz";
my $out2_name="$outdir/$sample\_S1_L00$lane\_R2_001.fastq.gz";

open R1,"zcat $read1|" or die "can't open $read1:$!\n";
open O1,"|gzip > $out1_name" or die $!;
my($fc,$l,$c,$r,$tile,$id,$seq,$line,$qual);
while(<R1>) {
  chomp($id=$_); # eg. S200027294L1C001R00100004766/1
  if($id=~/^\@([A-Z]\d+)L(\d)C(\d\d\d)R(\d\d\d)(\d+)\/1$/) {
    $fc=$1;
    $l=$2;
    $c=$3;
    $r=$4;
    $tile=$5;
    $c=~s/^0+//;
    $r=~s/^0+//;
    $tile=~s/^0+//;
    $seq=<R1>;
    $line=<R1>;
    $qual=<R1>;
    print O1 "\@M00001:1:$fc:$l:$tile:$c:$r 1:N:0:1\n$seq$line$qual";
  } else {
    die "Skip unknown header ($.): $id #\n";
    <R1> for 1..3;
  }
}
close R1;
close O1;

open R2,"zcat $read2|" or die "can't open $read2:$!\n";
open O2,"|gzip > $out2_name" or die $!;
while(<R2>) {
  chomp($id=$_); # eg. S200027294L1C001R00100004766/2
  if($id=~/^\@([A-Z]\d+)L(\d)C(\d\d\d)R(\d\d\d)(\d+)\/2$/) {
    $fc=$1;
    $l=$2;
    $c=$3;
    $r=$4;
    $tile=$5;
    $c=~s/^0+//;
    $r=~s/^0+//;
    $tile=~s/^0+//;
    $seq=<R2>;
    $line=<R2>;
    $qual=<R2>;
    print O2 "\@M00001:1:$fc:$l:$tile:$c:$r 2:N:0:1\n$seq$line$qual";
  } else {
    warn "Skip unknown header ($.): $id\n";
    <R2> for 1..3;
  }
}
close R2;
close O2;
